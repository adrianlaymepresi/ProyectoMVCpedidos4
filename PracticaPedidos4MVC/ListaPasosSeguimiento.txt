--- BASES INICIALES ---
1) Crear proyecto MVC
2) Configurar base de datos -> Crear DB inicial (SQL Server) y conexión en appsettings.json
3) Configurar Entity Framework -> Agregar EF Core y scaffolding inicial
4) Modificar layout

--- MODELOS ---
5) Crear modelo User -> Definir entidad con nombre, email, password, rol
6) Crear modelo Product -> Nombre, descripción, precio, stock
7) Crear modelo Order -> Cliente, fecha, estado, total
8) Crear modelo OrderItem -> Producto, cantidad, subtotal
9) Relacionar Order y User -> ForeignKey Cliente
10) Relacionar OrderItem y Product -> ForeignKey Producto
EXTRA) Agregar relación OrderItem-Order (FK IdPedido, borrado en cascada)

--- VALIDACIÓN TÉCNICA ---
11) Validar modelos con DataAnnotations -> Required, Range, StringLength

--- MIGRACION IMPORTANTE ---
EXTRA) Agregar precisión decimales + Codigo Program + Migración inicial

--- PROGRAMAR ---
12) Configurar controladores base -> HomeController y vista Index + interfaz de login (maqueta)
13) Crear controlador UsersController -> Implementar CRUD básico
14) Crear vistas de usuario -> Index, Create, Edit, Details, Delete + Validaciones tentativas en UsersController (MX DNS, duplicados, trims) [NuGet: DnsClient]
15) Crear controlador ProductsController -> CRUD productos
16) Crear vistas de producto -> Listado, creación y edición + Validaciones tentativas en ProductsController
17) Filtrado y búsqueda -> Por nombre, categoría, rango de precio + actualizacion modelo Producto
18) Crear controlador OrdersController -> CRUD pedidos
19) Crear vistas de pedido -> Listado, detalle, creación rápida y 20) Crear vistas de detalles de pedido -> Mostrar productos y cantidades por pedido + Afinar detalles y validaciones

--- LÓGICA ---
21) Validaciones de producto -> Precios positivos, stock ≥0
22) Validar stock -> No permitir pedido si stock insuficiente
23) Ajustar stock al crear pedido -> Reducir stock automáticamente
24) Calcular totales automáticamente -> Suma de subtotales de items
25) Cambiar estado de pedido -> Pendiente, procesado, enviado, entregado

--- SEGURIDAD ---
26) Implementar autenticación -> Login / Logout con Manual + evitar cada 3 intentos ataques de fuerza bruta que espere una x cantidad de tiempo
27) Autorización manual por roles; menú dinámico; redirección post-login; Catálogo cliente; sin [Authorize]; [28 OMITIDO por doc. 23/09/2025]
EXTRA) Seguridad: roles fijos admin/empleado/cliente (select en Create/Edit + validación servidor); bloqueo de auto-eliminación del admin logueado (vista + POST); nueva migración a BD correcta.

--- VALIDACIONES FUERTES ---
29) Manejar errores en controlador -> Try/catch y mensajes amigables
30) Sanitizar entradas (anti-SQLi): CRUD con LINQ/EF parametrizado; y hardening del buscador público de Catálogo (longitud máx + bloqueo de firmas SQL).
EXTRA) Agregar un README.md para que se sepa las credenciales de uso para ingresar al sistema con los 3 roles definidos. Respaldo BD PedidosDB.bak en /Data (para restauración rápida).
