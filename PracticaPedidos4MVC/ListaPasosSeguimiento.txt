--- BASES INICIALES ---
1) Crear proyecto MVC
2) Configurar base de datos -> Crear DB inicial (SQL Server) y conexión en appsettings.json
3) Configurar Entity Framework -> Agregar EF Core y scaffolding inicial
4) Modificar layout

--- MODELOS ---
5) Crear modelo User -> Definir entidad con nombre, email, password, rol
6) Crear modelo Product -> Nombre, descripción, precio, stock
7) Crear modelo Order -> Cliente, fecha, estado, total
8) Crear modelo OrderItem -> Producto, cantidad, subtotal
9) Relacionar Order y User -> ForeignKey Cliente
10) Relacionar OrderItem y Product -> ForeignKey Producto
EXTRA) Agregar relación OrderItem-Order (FK IdPedido, borrado en cascada)

--- VALIDACIÓN TÉCNICA ---
11) Validar modelos con DataAnnotations -> Required, Range, StringLength

--- MIGRACION IMPORTANTE ---
EXTRA) Agregar precisión decimales + Codigo Program + Migración inicial

--- PROGRAMAR ---
12) Configurar controladores base -> HomeController y vista Index + interfaz de login (maqueta)
13) Crear controlador UsersController -> Implementar CRUD básico
14) Crear vistas de usuario -> Index, Create, Edit, Details, Delete + Validaciones Tentativas en Controller
15) Crear controlador ProductsController -> CRUD productos
16) Crear vistas de producto -> Listado, formulario creación y edición
17) Filtrado y búsqueda -> Por nombre, categoría, rango de precio
18) Crear controlador OrdersController -> CRUD pedidos
19) Crear vistas de pedido -> Listado, detalle, creación rápida
20) Crear vistas de detalles de pedido -> Mostrar productos y cantidades por pedido

--- LÓGICA ---
21) Validaciones de producto -> Precios positivos, stock ≥0
22) Validar stock -> No permitir pedido si stock insuficiente
23) Ajustar stock al crear pedido -> Reducir stock automáticamente
24) Calcular totales automáticamente -> Suma de subtotales de items
25) Cambiar estado de pedido -> Pendiente, procesado, enviado, entregado

--- SEGURIDAD ---
26) Implementar autenticación -> Login / Logout con Identity o manual
27) Implementar autorización -> Roles: admin / cliente / empleado
28) Evitar acceso no autorizado -> Decoradores [Authorize] en controladores

--- VALIDACIONES FUERTES ---
29) Manejar errores en controlador -> Try/catch y mensajes amigables
30) Sanitizar entradas de usuario -> Evitar inyección de código o SQL
